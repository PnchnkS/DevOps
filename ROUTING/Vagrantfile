
Vagrant.configure("2") do |config|
	config.vbguest.auto_update = true
	hosts = [ { name: 'masterdns', ip: '172.16.1.1', netmask: '255.255.255.248', ip2: '172.16.2.1', netmask2: '255.255.255.224', box:'centos/7' },
			  { name: 'R13',  ip: '172.16.3.1', netmask: '255.255.255.192', ip2: '172.16.1.2', netmask2: '255.255.255.248', box:'ubuntu/trusty32'},
			  { name: 'R23',  ip: '172.16.3.2', netmask: '255.255.255.192', ip2: '172.16.2.2', netmask2: '255.255.255.224', box:'ubuntu/trusty32'},
			  { name: 'R3N',  ip: '172.16.3.3', netmask: '255.255.255.192',  box:'ubuntu/trusty32' },
			  { name: 'NODE', box:'ubuntu/trusty32', net: 'NET1' } ]
	hosts.each do |host|
		config.vm.define host[:name] do |node|
			node.vm.hostname = host[:name]
			node.vm.box = host[:box]
			if (host[:name] == 'masterdns')
				node.vm.network :private_network, ip: host[:ip], netmask: host[:netmask], virtualbox__intnet: "intnet1"
				node.vm.network :private_network, ip: host[:ip2], netmask: host[:netmask2], virtualbox__intnet: "intnet2"
				node.vm.provision 'shell', path: 'provision/masterProvision.sh'
			elsif (host[:name] == 'R13')
				node.vm.network :private_network, ip: host[:ip], netmask: host[:netmask], virtualbox__intnet: "intnet3"
				node.vm.network :private_network, ip: host[:ip2], netmask: host[:netmask2], virtualbox__intnet: "intnet1"
				node.vm.provision 'shell', path: 'provision/routerProvision.sh'
			elsif (host[:name] == 'R23')
				node.vm.network :private_network, ip: host[:ip], netmask: host[:netmask], virtualbox__intnet: "intnet3"
				node.vm.network :private_network, ip: host[:ip2], netmask: host[:netmask2], virtualbox__intnet: "intnet2"
				node.vm.provision 'shell', path: 'provision/routerProvision.sh'
			elsif (host[:name] == 'R3N')
				node.vm.network :private_network, ip: host[:ip], netmask: host[:netmask], virtualbox__intnet: "intnet3"
				node.vm.provision 'shell', path: 'provision/r3nProvision.sh'
			elsif (host[:net] == 'NET1')
				node.vm.network :private_network, auto_config: false, ip: '172.16.1.0', netmask: '255.255.255.248', type:"dhcp", virtualbox__intnet: "intnet1"
				node.vm.provision 'shell', run: "always",  inline: "ifdown eth0 && dhclient -v && ifup eth0"
			end
			node.vm.provider :virtualbox do |vb|
			vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
			vb.name = host[:name]
			vb.gui = false
			end
		end
	end

end